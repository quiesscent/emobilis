from django.db import models
from tinymce import models as tinymce_models
from django.utils import timezone
from acc.models import CustomUser, DoctorProfile, InstitutionDoctorProfile

# Create your models here.
class Doctor(models.Model):
    name = models.CharField(default='', max_length=100)
    employee_id = models.CharField(unique=True, max_length=7) # autogenerated
    email = models.EmailField(unique=True)
    gender = models.CharField(default='', max_length=10)
    phone_number = models.IntegerField()
    specialization = models.CharField(default='', max_length=20)
    department = models.CharField(default='', max_length=20)
    institution = models.CharField(default='', max_length=200)
    

    def __str__(self):
        return f'{self.name }'

class Staff(models.Model):
    name = models.CharField(default='', max_length=200)
    employee_id = models.CharField(unique=True, max_length=7) # autogenerated
    date_of_birth = models.DateField()
    email =  models.EmailField(default='')
    gender = models.CharField(default='', max_length=10)
    phone_number = models.IntegerField()
    position = models.CharField(default='', max_length=200)
    department = models.CharField(default='', max_length=200)
    institution = models.CharField(default='', max_length=200)
    def __str__(self):
        return f'{self.name} Staff Profile'
        
class Patient(models.Model):
    name = models.CharField(default='', max_length=100)
    patient_id = models.CharField(unique=True, max_length=7) # autogenerated
    age = models.IntegerField()
    date_of_birth = models.DateField()
    gender = models.CharField(default='', max_length=10)
    phone_number = models.IntegerField()
    institution = models.CharField(default='', max_length=200)

    def __str__(self):
        return f'{self.name}'

class InPatientRecord(models.Model):
    patient = models.ForeignKey(Patient, on_delete=models.CASCADE, to_field='patient_id')
    record_id = models.IntegerField(unique=True)
    reason_for_visit = tinymce_models.HTMLField(max_length=10000, default='')
    sickness = tinymce_models.HTMLField(max_length=10000, default='')
    diagnosis = tinymce_models.HTMLField(max_length=10000, default='')
    medication = tinymce_models.HTMLField(max_length=10000, default='')
    payment_method = models.CharField(default='', max_length=20)
    room_no = models.IntegerField(unique=True)
    assigned_doctor = models.ForeignKey(InstitutionDoctorProfile, on_delete=models.CASCADE)
    next_of_kin_name = models.CharField(default='', max_length=20)
    next_of_kin_contact = models.IntegerField()
    next_of_kin_address = models.IntegerField()
    date_addmitted = models.DateTimeField()
    date_discharged = models.DateTimeField()
    updated_at = models.DateTimeField(default=timezone.now)
    institution = models.CharField(default='', max_length=200)


    def __str__(self):
        return f'{self.name }'

class OutPatientRecord(models.Model):
    patient = models.ForeignKey(Patient, on_delete=models.CASCADE, to_field='patient_id')
    record_id = models.IntegerField(unique=True)
    reason_for_visit = tinymce_models.HTMLField(max_length=10000, default='')
    sickness = tinymce_models.HTMLField(max_length=10000, default='')
    diagnosis = tinymce_models.HTMLField(max_length=10000, default='')
    medication = tinymce_models.HTMLField(max_length=10000, default='')
    payment_method = models.CharField(default='', max_length=20)
    assigned_doctor = models.ForeignKey(InstitutionDoctorProfile, on_delete=models.CASCADE, )
    next_of_kin_name = models.CharField(default='', max_length=20)
    next_of_kin_contact = models.IntegerField()
    next_of_kin_address = models.IntegerField()
    updated_at = models.DateTimeField(default=timezone.now)
    institution = models.CharField(default='', max_length=200)

    def __str__(self):
        return f'{self.name}'


class doctorAppointment(models.Model):
    # Patient Information
    full_name = models.CharField(max_length=100)
    date_of_birth = models.DateField()
    contact_number = models.CharField(max_length=15)  # Adjust length for international numbers

    # Appointment Details
    preferred_appointment_date = models.DateField()
    preferred_time = models.CharField(
        max_length=20,
        choices=[
            ('Morning', 'Morning'),
            ('Afternoon', 'Afternoon'),
            ('Evening', 'Evening')
        ],
        default='Morning'
    )
    doctor = models.ForeignKey(InstitutionDoctorProfile, on_delete=models.CASCADE)
    reason_for_visit = models.TextField()
    symptoms = models.TextField(blank=True, null=True)  # Optional field
    emergency_contact_name = models.CharField(max_length=100)
    emergency_contact_relationship = models.CharField(max_length=50)
    emergency_contact_number = models.CharField(max_length=15)
    institution = models.CharField(default='', max_length=200)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        ordering = ['created_at'] 
    
    def __str__(self):
        return f'{self.full_name} Appointment'